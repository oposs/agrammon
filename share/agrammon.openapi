openapi: 3.0.0
info:
    version: 1.0.0
    title: OpenApi Agrammon
    description: |
        REST api for the [Agrammon web application](https://agrammon.ch/en/agrammon-model/).
        NOTE: some routes are not yet OpenApi based
paths:
    /get_account_key:
        post:
            summary: Get a key for account creation
            operationId: getAccountKey
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - email
                                - password
                            properties:
                                email:
                                    description: User's email used as username
                                    type: string
                                password:
                                    description: Inital password
                                    type: string
                                firstname:
                                    description: Firstname
                                    type: string
                                    nullable: true
                                lastname:
                                    description: Lastname
                                    type: string
                                    nullable: true
                                org:
                                    description: Organization
                                    type: string
                                    nullable: true
                                language:
                                    type: string
                                    enum:
                                        - de
                                        - en
                                        - fr
            responses:
                '204':
                    description: Key created and mailed
                '400':
                    description: No username
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BadRequest"
                '404':
                    description: Couldn't create account
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CreationFailed"
                '409':
                    description: User already exists
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                '422':
                    description: Role doesn't exist
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Unknown"
    /create_account:
        post:
            summary: Create new user account
            operationId: createAccount
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - email
                                - password
                            properties:
                                email:
                                    description: User's email used as username
                                    type: string
                                password:
                                    description: Inital password
                                    type: string
                                key:
                                    description: Validation key
                                    type: string
                                firstname:
                                    description: Firstname
                                    type: string
                                    nullable: true
                                lastname:
                                    description: Lastname
                                    type: string
                                    nullable: true
                                org:
                                    description: Organization
                                    type: string
                                    nullable: true
                                role:
                                    description: User role
                                    type: string
                                    enum:
                                        - admin
                                        - support
                                        - user
            responses:
                '200':
                    description: Account created.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - username
                                properties:
                                    username:
                                        type: string
                '400':
                    description: No username
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BadRequest"
                '404':
                    description: Couldn't create account
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CreationFailed"
                '409':
                    description: User already exists
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                '422':
                    description: Role doesn't exist
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Unknown"
    /change_password:
        post:
            summary: Change user password
            operationId: changePassword
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ChangePassword"
            responses:
                '204':
                    description: Password changed
                '409':
                    description: Passwords identical
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                '422':
                    description: Password invalid
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /clone_dataset:
        post:
            summary: Clone a dataset
            operationId: cloneDataset
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CloneDataset"
            responses:
                '204':
                    description: Dataset cloned
                '409':
                    description: Dataset clone failed
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /rename_dataset:
        post:
            summary: Rename a dataset
            operationId: renameDataset
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rename"
            responses:
                '204':
                    description: Dataset renamed
                '409':
                    description: Dataset rename failed
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /create_tag:
        post:
            summary: Create new dataset tag
            operationId: createTag
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - name
                            properties:
                                name:
                                    description: Tag name
                                    type: string
            responses:
                '204':
                    description: Tag created
                '409':
                    description: Tag creation failed
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /delete_tag:
        post:
            summary: Delete a dataset tag
            operationId: deleteTag
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Delete"
            responses:
                '204':
                    description: Tag deleted
                '409':
                    description: Tag deletion failed
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /rename_tag:
        post:
            summary: Rename a dataset tag
            operationId: renameTag
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rename"
            responses:
                '204':
                    description: Tag renamed
                '409':
                    description: Tag rename failed
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /delete_instance:
        post:
            summary: Delete an instance
            operationId: deleteInstance
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DeleteInstance"
            responses:
                '204':
                    description: Instance renamed
                '409':
                    description: Instance rename failed
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /order_instances:
        post:
            summary: Reorder instances
            operationId: orderInstances
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - datasetName
                                - instances
                            properties:
                                datasetName:
                                    description: Name of dataset
                                    type: string
                                instances:
                                    description: Array of instances to reorder
                                    type: array
                                    items:
                                        type: string
            responses:
                '204':
                    description: Instances reordered
                '409':
                    description: Instance reordering failed
                    content:
                        application/json:
                            schema:
                               $ref: "#/components/schemas/Error"
    /rename_instance:
        post:
            summary: Rename an instance
            operationId: renameInstance
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rename"
            responses:
                '204':
                    description: Instance renamed
                '409':
                    description: Instance rename failed
                    content:
                        application/json:
                            schema:
                               $ref: "#/components/schemas/Error"
    /reset_password:
        post:
            summary: Reset user password
            operationId: resetPassword
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ResetPassword"
            responses:
                '204':
                    description: Password reset
                '409':
                    description: Password reset failed
                    content:
                        application/json:
                            schema:
                               $ref: "#/components/schemas/Error"
    /store_input_comment:
        post:
            summary: Store input comment
            operationId: storeInputComment
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - datasetName
                                - variable
                            properties:
                                datasetName:
                                    description: Dataset name
                                    type: string
                                variable:
                                    description: Variable name
                                    type: string
                                comment:
                                    description: Comment
                                    type: string
                                    nullable: true
            responses:
                '204':
                    description: Comment stored
                '500':
                    description: Store comment failed
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /store_data:
        post:
            summary: Store an input value
            operationId: storeData
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Data"
            responses:
                '204':
                    description: Data stored
                '500':
                    description: Store data failed
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                default:
                    description: Unknown response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /set_tag:
        post:
            summary: Set tag on datasets
            operationId: setTag
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/SetRemoveTag"
            responses:
                '204':
                    description: Datasets tagged
                '500':
                    description: Setting tag failed
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /remove_tag:
        post:
            summary: Remove tag on datasets
            operationId: removeTag
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/SetRemoveTag"
            responses:
                '204':
                    description: Datasets tag removed
                '500':
                    description: Remove tag failed
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /get_input_variables:
        post:
            summary: Get input variables
            operationId: getInputVariables
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - datasetName
                            properties:
                                datasetName:
                                    description: Dataset name
                                    type: string
            responses:
                '200':
                    description: Input variables
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/InputVariables"
                '500':
                    description: Getting input variables failed
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /get_output_variables:
        post:
            summary: Get output variables
            operationId: getOutputVariables
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - datasetName
                            properties:
                                datasetName:
                                    description: Dataset name
                                    type: string
            responses:
                '200':
                    description: Output variables
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/OutputVariables"
                '500':
                    description: Getting output variables failed
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /export/excel:
        post:
            summary: Get Excel export
            operationId: exportExcel
            requestBody:
                required: true
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/GetReport"
            responses:
                '200':
                    description: Export
                    content:
                        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet':
                            schema:
                                type: string
                                format: binary
                '400':
                    description: Getting Excel export failed
                    content:
                        text/html; charset=utf-8:
                            schema:
                                type: string
                '500':
                    description: Getting Excel export failed
                    content:
                        text/html; charset=utf-8:
                            schema:
                                type: string
    /export/pdf:
        post:
            summary: Get PDF export
            operationId: exportPDF
            requestBody:
                required: true
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/GetReport"
            responses:
                '200':
                    description: Export
                    content:
                        'application/pdf':
                            schema:
                                type: string
                                format: binary
                '400':
                    description: Getting PDF export failed
                    content:
                        text/html; charset=utf-8:
                            schema:
                                type: string
                '500':
                    description: Getting PDF export failed
                    content:
                        text/html; charset=utf-8:
                            schema:
                                type: string
components:
    schemas:
        GetReport:
            type: object
            additionalProperties: true
            properties:
                datasetName:
                    description: Name of the dataset
                    type: string
                language:
                    description: Language for output translation
                    type: string
                withFilters:
                    description: Show filter groups
                    type: boolean
        DeleteInstance:
            type: object
            required:
                 - datasetName
                 - instance
                 - variablePattern
            properties:
                datasetName:
                    description: Dataset name
                    type: string
                instance:
                    description: Instance name
                    type: string
                variablePattern:
                    description: Variable name
                    type: string
        Delete:
            type: object
            required:
                 - name
            properties:
                name:
                    description: Object name
                    type: string
        Rename:
            type: object
            required:
                - oldName
                - newName
            properties:
                oldName:
                    description: Current name
                    type: string
                newName:
                    description: New name
                    type: string
        ResetPassword:
            type: object
            required:
                - email
                - password
                - key
            properties:
                email:
                    description: Login name
                    type: string
                password:
                    description: New password
                    type: string
                key:
                    description: Secret
                    type: string
                    nullable: true
        CloneDataset:
            type: object
            required:
                 - newUsername
                 - oldDataset
                 - newDataset
            properties:
                oldUsername:
                    description: Owner of the original dataset
                    type: string
                newUsername:
                    description: Owner of the cloned dataset
                    type: string
                oldDataset:
                    description: Name of the source dataset
                    type: string
                newDataset:
                    description: Name of the cloned dataset
                    type: string
        ChangePassword:
            type: object
            required:
                 - oldPassword
                 - newPassword
            properties:
                oldPassword:
                    description: Current password
                    type: string
                newPassword:
                    description: New password
                    type: string
        InputVariables:
            type: object
            required:
                - datasetName
                - inputs
                - graphs
                - reports
            properties:
                datasetName:
                    description: Dataset name
                    type: string
                inputs:
                    description: Input variables
                    type: array
                    items:
                        $ref: '#/components/schemas/Input'
                graphs:
                    description: Graphical results
                    type: array
                    items:
                        type: object
                reports:
                    description: Tabular results
                    type: array
                    items:
                        type: object
        LanguageLabels:
            type: object
            properties:
                de:
                    type: string
                en:
                    type: string
                fr:
                    type: string
                it:
                    type: string
        Input:
            type: object
            additionalProperties: true
            properties:
                branch:
                    type: string
                    enum:
                        - 'true'
                        - 'false'
                defaults:
                    type: object
                    properties:
                        calc:
                            nullable: true
                            anyOf:
                                - type: string
                                - type: number
                        gui:
                            nullable: true
                            anyOf:
                                - type: string
                                - type: number
                enum:
                    description: Elements of select box
                    type: object
                    additionalProperties: true
                gui:
                    description: GUI navigation label
                    $ref: '#/components/schemas/LanguageLabels'
                help:
                    description: Help texts
                    $ref: '#/components/schemas/LanguageLabels'
                labels:
                    description: Input labels
                    $ref: '#/components/schemas/LanguageLabels'
                models:
                    description: Model variants this input is used for
                    type: array
                    items:
                        type: string
                options:
                    description: XXX
                    type: array
                    items:
                        type: array
                        items:
                            type: string
                optionsLang:
                    description: XXX
                    type: array
                    items:
                        $ref: '#/components/schemas/LanguageLabels'
                order:
                    description: Number used for sorting
                    type: integer
                type:
                    description: Data type
                    type: string
                    enum:
                        - float
                        - integer
                        - percent
                        - text
                        - enum
                        - enum{ignore}
                units:
                    description: Input labels
                    $ref: '#/components/schemas/LanguageLabels'
                variable:
                    description: bla
                    type: string
                validator:
                    description: Input validator
                    anyOf:
                        - $ref: '#/components/schemas/EmptyHash'
                        - $ref: '#/components/schemas/ValidatorHash'
        EmptyHash:
            type: object
            properties: {}
        ValidatorHash:
            type: object
            properties:
                name:
                    description: Operation name
                    type: string
                    enum:
                        - ge
                        - between
                args:
                    description: Arguments
                    type: array
                    items:
# TODO: convert to numbers in backend
                        oneOf:
                            - type: number
                            - type: string
        OutputVariables:
            type: object
            additionalProperties:
                type: object
                additionalProperties:
                    oneOf:
                        - type: integer
                        - type: string
        Export:
            type: object
            required:
                - inputs
                - outputs
            properties:
                outputs:
                    description: Output variables
                inputs:
                    description: Input variables
        Data:
            type: object
            required:
                - datasetName
                - variable
                - value
            properties:
                datasetName:
                    description: Dataset name
                    type: string
                variable:
                    description: Variable name
                    type: string
                value:
                    description: Value
                    oneOf:
                        - type: integer
                        - type: string
                    nullable: true
                row:
                    description: Row
                    type: integer
                branches:
                    description: Branches
                    type: array
                    items:
                        oneOf:
                            - type: integer
                            - type: string
                options:
                    description: Options
                    type: array
                    items:
                        schema:
                            type: array
                                items: string
        SetRemoveTag:
            type: object
            required:
                - datasets
                - tagName
            properties:
                datasets:
                    description: Dataset list
                    type: array
                    items:
                        type: string
                tagName:
                    description: Tag name
                    type: string
        BadRequest:
            required:
                - error
            properties:
                error:
                    type: string
        Error:
            required:
                - error
            properties:
                error:
                    type: string
        CreationFailed:
            required:
                - error
            properties:
                error:
                    type: string
        Unknown:
            required:
                - error
            properties:
                error:
                    type: string
