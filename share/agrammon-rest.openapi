openapi: 3.0.0
info:
    version: 1.0.0
    title: OpenApi Agrammon REST
    description: |
       This API allows to programmatically access the [simulation model Agrammon](https://agrammon.ch/en).
paths:
    /model/technical:
        get:
            summary: Get technical file
            description: |
                The technical file defines parameters used in the model simulation model.
            operationId: getTechnical
            parameters:
                - in: query
                  name: technical
                  description: filename of the technical file to download
                  schema:
                      type: string
            responses:
                '200':
                    description: Technical file
                    content:
                        text/plain:
                            schema:
                                type: string
                '401':
                    description: Not authorized.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /model/latex:
        get:
            summary: Get LaTeX model documentation
            operationId: getLatex
            parameters:
                - in: query
                  name: technical
                  description: filename of the technical file to include; defaults to `technical.cfg`
                  schema:
                      type: string
                - in: query
                  name: sort
                  description: sort order of the model modules; defaults to `model`
                  schema:
                      type: string
                      enum:
                          - model
                          - calculation`
            responses:
                '200':
                    description: LaTeX file, can be translated with `lualatex`.
                    content:
                        text/plain:
                            schema:
                                type: string
                '400':
                    description: Invalid input
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                '401':
                    description: Not authorized.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /inputTemplate:
        get:
            summary: Get model input template CSV file
            description: |
                The template contains a line for each input value to the Agrammon model.
                There is one instance for each multi-module.
                The file can be used to either run a model simulation with this REST interface
                or be uploaded to the database of the Agrammon web application.
            operationId: getInputTemplate
            parameters:
                - in: query
                  name: sort
                  description: sort order of the model modules; defaults to `model`
                  schema:
                      type: string
                      enum:
                          - model
                          - calculation
                - in: query
                  name: format
                  description: output format; defaults to `text`
                  schema:
                      type: string
                      enum:
                          - text
                          - csv
                          - json
                - in: query
                  name: language
                  schema:
                     type: string
                     description: language for various parameters, defaults to `de`
                     enum:
                         - de
                         - en
                         - fr
            responses:
                '200':
                    description: Input template file in specified format
                    content:
                        application/json:
                            schema:
                                description: JSON formatted
                        text/csv:
                            schema:
                                description: CSV formatted
                        text/plain:
                            schema:
                                description: human readable text formatted
                '400':
                    description: Invalid request.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                '401':
                    description: Not authorized.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /run:
        post:
            summary: Run simulation
            operationId: runSimulation
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/Run"
                        encoding:
                            inputs:
                                contentType: text/csv
            responses:
                '200':
                    description: Simulation results; format depends on request accept header.
                    content:
                        application/json:
                            schema:
                                description: JSON formatted
                        text/csv:
                            schema:
                                description: CSV formatted
                        text/plain:
                            schema:
                                description: human readable text formatted
                '400':
                    description: Invalid request.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        text/plain:
                            schema:
                                description: text formatted
                '401':
                    description: Not authorized.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        text/plain:
                            schema:
                                description: text formatted
components:
    schemas:
        Run:
            type: object
            required:
                - simulation
                - dataset
                - inputs
            properties:
                simulation:
                    description: Comment to be included in the output.
                    type: string
                dataset:
                    description: Another comment to be included in the output.
                    type: string
                inputs:
                    description: Input data as CSV string or JSON
                technical:
                    description: filename of the technical file to use in simulation; defaults to `technical.cfg`
                    type: string
                model:
                    type: string
                    description: Model version to use; defaults to `version6`
                    enum:
                        - version4
                        - version5
                        - version6
                variants:
                    type: string
                    description: Model variant to use; defaults to `Base`
                    enum:
                        - Base
                        - Kantonal_LU
                        - SHL
                        - LU
                print-only:
                    description: limit the output to results marked in the model with the specified label.
                    type: string
                language:
                    type: string
                    description: output labels; defaults to `de`
                    enum:
                        - de
                        - en
                        - fr
                include-filters:
                    description: whether to include detailed outputs; defaults to `false`
                    type: string
                    enum:
                        - 'true'
                        - 'false'
                all-filters:
                    description: whether to include empty detailed outputs; defaults to `false`
                    type: string
                    enum:
                        - 'true'
                        - 'false'
                compact-output:
                    description: compact instead of full output
                    type: string
                    enum:
                        - 'true'
                        - 'false'
        Error:
            required:
                - error
            properties:
                error:
                    type: string
