---
kind: pipeline
name: agrammon
type: docker

services:
    - name: database
      image: postgres
#      ports:
#        - 5432
      environment:
        POSTGRES_USER: postgres
        POSTGRES_DB: agrammon_test
        POSTGRES_PASSWORD: postgres
        PGPASSFILE: /drone/src/dev/pgpass

volumes:
    - name: dockersock
      host:
          path: /var/run/docker.sock


steps:
- name: buildDockerImage
  image: docker
  volumes:
    - name: dockersock
      path: /var/run/docker.sock
  commands:
    - IMG=agrammon-runner-ubuntu-18.04
    - SHA=$( cat dev/Dockerfile-ubuntu:18.04 dev/META6.json| sha1sum |awk '{print $1}')
    - test "$(docker images $IMG:$SHA -q)" = "" || exit 0
    - docker build -t $IMG:$SHA -f dev/Dockerfile-ubuntu:18.04 dev
    - docker tag $IMG:$SHA $IMG:latest

# - name: frontend
#   image: oposs/agrammon-runner:latest
#   privileged: true
#   commands:
#       - ln -s /home/agrammon/node_modules /drone/src/frontend/
#       - chown -R agrammon:agrammon /drone/src
#       - export AGRAMMON_DIR=/drone/src
#       - export AGRAMMON_CONFIG=/drone/src/t/test-data/etc-frontend-tests/agrammon.cfg
#       - /home/agrammon/entrypoint.sh qx package migrate
#       - /home/agrammon/entrypoint.sh test-frontend

# - name: restore-raku-cache
#   image: meltwater/drone-cache:dev
#   pull: always
#   depends_on:
#       - buildDockerImage
#   settings:
#       backend: filesystem
#       restore: true
#       cache_key: opt-rakudo-pkg-share-$( checksum $AGRAMMON_DIR/META6.json)
#       archive_format: gzip
#       mount:
#           - /opt/rakudo-pkg/share
#       volumes:
#           - name: cache
#             path: /tmp/cache

- name: backend
  image: agrammon-runner-ubuntu-18.04:latest
  pull: never
  depends_on:
      - buildDockerImage
  privileged: true
  environment:
      AGRAMMON_DIR: /drone/src
      AGRAMMON_CONFIG: /drone/src/t/test-data/etc-backend-tests/agrammon.cfg
      TEST_JOBS: 4
      RAKULIB: /opt/rakudo-pkg/share/perl6/site,lib
      PGPASSFILE: $AGRAMMON_DIR/dev/pgpass
  commands:
      - ls -al $AGRAMMON_DIR/dev
      - raku -v
      - cd $AGRAMMON_DIR
#      - echo '*:*:*:postgres:postgres' > $HOME/.pgpass
#      - chmod 0600 $HOME/.pgpass
      - psql -U postgres -d agrammon_test -h database -c 'select now()'
#      - prove -v -r --exec=raku t/config.t
#      - prove -v -r --exec=raku t/datasource-db.t
#      - prove -v -r --exec=raku t

# - name: store-raku-cache
#   image: meltwater/drone-cache:dev
#   pull: never
#   depends_on:
#       - backend
#   settings:
#       backend: filesystem
#       rebuild: true
#       cache_key: opt-rakudo-pkg-share-$( checksum $AGRAMMON_DIR/META6.json)
#       archive_format: gzip
#       mount:
#           - /opt/rakudo-pkg/share
#       volumes:
#           - name: cache
#             path: /tmp/cache

# - name: complete
#   image: alpine
#   # depends_on: [ frontend, backend ]
#   depends_on: [ backend ]
#   commands:
#     - echo "ALL DONE."
#
# END
