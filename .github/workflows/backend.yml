name: backend

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:

jobs:
  raku:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # - macOS-latest
        raku-version:
          - 'latest'
          # - '2019.11'
    runs-on: ${{ matrix.os }}

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: agrammon_test
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - uses: Raku/setup-raku@v1
        with:
          raku-version: ${{ matrix.raku-version }}

      - name: Show environment infos
        run: |
          psql --version
          raku -v
          which raku
          pwd
          ls -al
          ls -al $HOME
          env

      - name: Load test database
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: agrammon_test
          PGPASSFILE: $GITHUB_WORKSPACE/dev/pgpass
        run: |
          chmod 0600 $GITHUB_WORKSPACE/dev/pgpass
          ls -l $GITHUB_WORKSPACE/dev/pgpass
          cat $GITHUB_WORKSPACE/dev/pgpass
          env
          psql -U postgres -h localhost -c "CREATE USER agrammon PASSWORD 'agrammonATwork'"  > /dev/null
          psql -U postgres -h localhost -c "CREATE GROUP agrammon_user USER agrammon"        > /dev/null
          psql -U postgres -h localhost -c "CREATE EXTENSION pgcrypto" agrammon_test         > /dev/null
          psql -U postgres --file=$GITHUB_WORKSPACE/t/test-data/agrammon_test.dump.sql agrammon_test > /dev/null

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/rakudo/2020.09-01/x86_64/share/perl6/site/sources
          key: ${{ runner.os }}-deps

      - name: Install dependencies
        run: zef --debug --deps-only --/test --test-depends install .

      - name: Show module location
        run: zef locate Spreadsheet::XLSX

      - name: Run tests
        run: prove6 -l -v t/config.t
